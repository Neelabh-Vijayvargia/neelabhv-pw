/* src/index.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Import Google Fonts - Placed after Tailwind directives for better override control if needed */
@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;700&family=Poppins:wght@400;600;700&display=swap');

@layer base {
  :root {
    /* UT Palette Tokens - Warm Beige Theme */
    --ut-accent: #D9732D;        /* UT light burnt orange */
    --ut-accent-strong: #BF5700;  /* UT burnt orange (official) */
    --ut-accent-soft: #F1B085;    /* soft tint for hovers */
    --ut-bg: #EAD9C7;             /* warm beige with soft orange undertone */
    --ut-text: #1F2937;           /* gray-800 for readability */
    --ut-muted: #4B5563;          /* gray-600 muted text */
    --ut-ring: #D9732D;           /* focus ring */
  }

  /* Dev toggle - dark theme */
  html[data-theme="dark"] {
    --ut-accent: #D9732D;        /* UT burnt orange */
    --ut-accent-strong: #BF5700; /* UT strong orange */
    --ut-accent-soft: #F1B085;   /* soft orange */
    --ut-bg: #0A192F;            /* dark navy bg */
    --ut-text: #E2E8F0;          /* light text */
    --ut-muted: #94A3B8;         /* muted light text */
    --ut-ring: #F1B085;          /* light focus ring */
  }

  /* Dev toggle - original theme */
  html[data-theme="original"] {
    --ut-accent: #00f5c3;        /* original teal */
    --ut-accent-strong: #e94560; /* original red */
    --ut-accent-soft: #00f5c3;   /* original teal */
    --ut-bg: #1a1a2e;            /* original dark bg */
    --ut-text: #e0e0e0;          /* original text */
    --ut-muted: #a0a0a0;         /* original muted */
    --ut-ring: #00f5c3;          /* original ring */
  }

  html {
    scroll-behavior: smooth;
  }
  body {
    @apply bg-primary-bg text-text-primary font-sans antialiased;
  }
  ::selection {
    background-color: var(--ut-accent);
    color: var(--ut-bg);
  }
}

/* Custom scrollbar (using your previous example) */
::-webkit-scrollbar {
  width: 8px;
}
::-webkit-scrollbar-track {
  @apply bg-secondary-bg;
}
::-webkit-scrollbar-thumb {
  @apply bg-accent-1 rounded-full;
}
::-webkit-scrollbar-thumb:hover {
  background-color: var(--ut-accent-soft);
}

/* For section transitions (using your previous example) */
.section-fade-in {
  opacity: 0;
  transform: translateY(20px);
}

/* --- ADD THESE STYLES FOR CARD FLIP --- */
.perspective {
  perspective: 1000px; /* Creates the 3D space for children. Adjust value for more/less perspective. */
}

.experience-card-inner {
  transform-style: preserve-3d; /* Allows children to be positioned in 3D space relative to this parent. */
}

.experience-card-front,
.experience-card-back {
  backface-visibility: hidden; /* Hides the back of the card when it's not facing the viewer. */
  -webkit-backface-visibility: hidden; /* For Safari browser compatibility. */
  /* Ensure transitions on transform if you want smoother manual flips, though Tailwind handles the main flip */
  /* transition: transform 0.7s cubic-bezier(0.4, 0.2, 0.2, 1); */ /* Example, already handled by Tailwind's duration class on inner div */
}

/* Utility for rotating Y - Tailwind's rotate-y-180 class should handle this,
   but having it explicitly can be a fallback or for understanding.
   Tailwind v3+ includes `rotate-y-180` by default.
   If for some reason it's not working, this custom class can be used.
   The Experience.jsx component uses Tailwind's `rotate-y-180` class.
*/
/*
.rotate-y-180 {
  transform: rotateY(180deg);
}
*/
/* --- END OF CARD FLIP STYLES --- */

/* If you had animation-delay classes for blobs, they are not needed for this card flip version */
/*
.animation-delay-2000 {
  animation-delay: 2000ms;
}
*/